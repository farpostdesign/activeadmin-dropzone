<div id="dropzone_<%= method %>_<%= cycle(*(1..999).to_a, name: method) %>" class="dropzone">
  <span class="notice"><%=t 'dropzone.drag_or_click' %></span>
  <% object.send(method).each_with_index do |dropzone_object, index| %>
    <%= hidden_field_tag "#{ object.class.model_name.element }[#{ method }_attributes][#{ index }][id]", dropzone_object.id %>
  <% end %>
</div>

<% unless options[:hint].blank? %>
  <p class="inline-hints dropzone-hint"><%= options[:hint] %></p>
<% end %>

<script>
  (function() {
    Dropzone.autoDiscover = false;

    var mockFiles = <%= render_mock_dropzone_files(object.send(method)) %>;
    var mockFilesCount = mockFiles.length;
    var dropzone_id = "#dropzone_<%= method %>_<%= current_cycle(method) %>"; 
    var dropzone = new Dropzone(dropzone_id, { 
      url: '<%= raw upload_dropzone_path(dropzonable_id: (object.new_record? ? nil : object.id), dropzonable_class: object.class, dropzone_class: object.send(method).klass.to_s) %>',
      addRemoveLinks: true,
      dictCancelUpload: '<%=t "dropzone.cancel" %>',
      dictRemoveFile: '<%=t "dropzone.remove" %>',
      maxFiles: <%= defined?(max_files) ? '1' : 'null' %>,
      sending: function(file, xhr, formData) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').prop('content'));
      },
      success: function(file, data) {
        file.id = data.id;
        file.fresh = true;
        $(dropzone_id).append('<input type="hidden" name="<%= object.class.model_name.element %>[<%= method %>_attributes][' + mockFilesCount + '][id]" value="' + data.id + '" />');
        $(file.previewElement).attr('data-id', data.id);
        $(file.previewElement).attr('data-url', data.url);
        $(file.previewElement).attr('data-index', mockFilesCount++);
        $(file.previewElement).find('.dz-filename span').text(data.title);
        return file.previewElement.classList.add("dz-success");
      },
      removedfile: function(file) {
        $(file.previewElement).remove();
        $(dropzone_id).sortable('refresh');
        if(file.fresh) {
          $.ajax({
            url: '<%= raw destroy_dropzone_path(dropzonable_id: (object.new_record? ? nil : object.id), dropzonable_class: object.class, dropzone_class: object.send(method).klass.to_s) %>' + '&id=' + file.id,
            type: 'DELETE',
            success: function(data) {
              $(dropzone_id).find('input[value="' + file.id + '"]').remove();
              if (data.result != 'ok') {
                alert('Ошибка удаления фото. Пожалуйста, перезагрузите форму.');
              }
            }
          });
        } else {
          $(dropzone_id).append('<input type="hidden" name="<%= object.class.model_name.element %>[<%= method %>_attributes][' + file.index + '][_destroy]" value="1" />');
        }
      }
    });

    $(dropzone_id).sortable({
      items: '.dz-preview',
      placeholder: 'sortable-placeholder'
    });

    var func = function(file) {
      if (file.id) {
        $(file.previewElement).attr('data-id', file.id);
        $(file.previewElement).attr('data-index', file.index);
      }

      $(file.previewElement).find('.dz-filename, img').on('click', function() {
        var index = $(this).parents('.dz-preview:first').attr('data-index');
        var input = $(dropzone_id + ' input[name="<%= object.class.model_name.element %>[<%= method %>_attributes][' + index + '][id]"]');
        var title = prompt("<%=t 'dropzone.title' %>: ", $(file.previewElement).find('.dz-filename span').text());
        $(file.previewElement).find('.dz-filename span').text(title);
        input.val(title);
      });
    };

    var generate_dropzone_position_elements = function() {
      var position = 0;
      $(dropzone_id + ' .dz-preview').each(function() {
        var index = $(this).attr('data-index');
        $(dropzone_id).append('<input type="hidden" name="<%= object.class.model_name.element
 %>[<%= method %>_attributes][' + index + '][<%= object.send(method).klass.send("dropzone_field", :position) %>]" value="' + (position++) + '" />');
      });
    };

    dropzone.on('addedfile', func);

    for (var i = 0; i < mockFiles.length; i++) {
      var mockFile = mockFiles[i];
      dropzone.options.addedfile.call(dropzone, mockFile);
      func(mockFile);
      if (mockFile.url)
        dropzone.options.thumbnail.call(dropzone, mockFile, mockFile.url);
        $(mockFile.previewElement).attr('data-url', mockFile.url);
    }

    $('form').submit(function(e) {
      if (dropzone.getQueuedFiles().length > 0 || dropzone.getUploadingFiles().length > 0) {
        if (confirm("<%=t 'dropzone.are_you_sure' %>") == true) {
          generate_dropzone_position_elements();
        } else {
          e.preventDefault();
        }
      } else {
        generate_dropzone_position_elements();
      }
    });

    window.<%= method %>_dropzone = dropzone;
  })();
</script>
